HTTP Server
Code:
1.
package com.stackoverflow.q3732109;

import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;

import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;

public class Test {

    public static void main(String[] args) throws Exception {
        HttpServer server = HttpServer.create(new InetSocketAddress(8000), 0);
        server.createContext("/test", new MyHandler());
        server.setExecutor(null); // creates a default executor
        server.start();
    }

    static class MyHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange t) throws IOException {
            String response = "This is the response";
            t.sendResponseHeaders(200, response.length());
            OutputStream os = t.getResponseBody();
            os.write(response.getBytes());
            os.close();
        }
    }

}
=========================================================================================================

Code:2-

import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;
public class App {
    public static void main(String[] args) throws Exception {
        HttpServer server = HttpServer.create(new InetSocketAddress(8000), 0);
        server.createContext("/test", new MyHandler());
        //Thread control is given to executor service.
        server.setExecutor(java.util.concurrent.Executors.newCachedThreadPool());
        server.start();
    }
    static class MyHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange t) throws IOException {
            String response = "This is the response";
            long threadId = Thread.currentThread().getId();
            System.out.println("I am thread " + threadId );
            response = response + "Thread Id = "+threadId;
            t.sendResponseHeaders(200, response.length());
            OutputStream os = t.getResponseBody();
            os.write(response.getBytes());
            os.close();
        }
    }
}
=======================================================================================================================

Code:3
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;

public class NaiveHttpServer {

  public static void main(String[] args) throws IOException {
    String hostname = InetAddress.getLocalHost().getHostName();
    ServerSocket serverSocket = new ServerSocket(8089);
    while (true) {
      Socket clientSocket = serverSocket.accept();
      PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);
      BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
      String s = in.readLine();
      System.out.println(s);
      while ("\r\n".equals(in.readLine())); 
      if ("GET /hostname HTTP/1.1".equals(s)) {
        out.println("HTTP/1.1 200 OK");
        out.println("Connection: close");
        out.println("Content-Type: text/plain");
        out.println("Content-Length:" + hostname.length());
        out.println();
        out.println(hostname);
      } else {
        out.println("HTTP/1.1 404 Not Found");
        out.println("Connection: close");
        out.println();    
      }
      out.flush();
    }
  }
}

Print output to:http://localhost:8000/
link:https://stackoverflow.com/questions/3732109/simple-http-server-in-java-using-only-java-se-api

==============================================================================================================

New one:

import java.io.BufferedReader; 
import java.io.IOException; 
import java.io.InputStreamReader; 
import java.net.ServerSocket;
 import java.net.Socket; 
public class SimpleHTTPServer {       
public static void main(String args[] ) throws IOException {           
ServerSocket server = new ServerSocket(8080);         
System.out.println("Listening for connection on port 8080 ....");         
while (true) {             
Socket clientSocket = server.accept();         
    InputStreamReader isr   =  new InputStreamReader(clientSocket.getInputStream());            
    BufferedReader reader = new BufferedReader(isr);             
String line = reader.readLine();                         
while (!line.isEmpty()) {                 
System.out.println(line);                 
line = reader.readLine();        
     
}         
}     
}  
} 
==========================================================================================================
/*printing date*/

import java.io.IOException; 
import java.net.ServerSocket;
 import java.net.Socket; 
import java.util.Date; 
 /**  * Java program  to create a simple HTTP Server to demonstrate how to use  * 
public class SimpleHTTPServer {      
public static void main(String args[]) throws IOException {          
ServerSocket server = new ServerSocket(8080);    
    System.out.println("Listening for connection on port 8080 ....");         
while (true) {             
try (Socket socket = server.accept()) {                 
Date today = new Date();                 
String httpResponse = "HTTP/1.1 200 OK\r\n\r\n" + today;                 
socket.getOutputStream().write(httpResponse.getBytes("UTF-8"));             
}         
}     
}  
}  
=================================================================================
//lab 1 code
import java.io.*;
import java.net.InetSocketAddress;
import com.sun.net.httpserver.*;
public class One{
public static void main(String[] args) throws Exception {
 HttpServer ob = HttpServer.create(new InetSocketAddress(8000),0);
         ob.createContext("/lab", new newHandler());
         ob.setExecutor(null);
         ob.start();
}
static class newHandler implements HttpHandler
        {
public void handle(HttpExchange t) throws IOException
             {
	     byte[] res = "<h1> This is a response</h1>".getBytes();
             t.sendResponseHeaders(200, res.length);
             OutputStream os = t.getResponseBody();
             os.write(res);
             os.close();



            }
         
         
        
        }
    }
    
    
    
    ===========================================================================
    
    // lab2 code
    
import java.io.*;
import java.net.InetSocketAddress;
import com.sun.net.httpserver.*;
public class Server{

     public static void main(String[] args) throws Exception {

         HttpServer ob = HttpServer.create(new InetSocketAddress(8000),0);         
	ob.createContext("/lab", new newHandler());         
	ob.createContext("/lab1", new newHandler1());         
	ob.setExecutor(null);        
 	ob.start();
          }

         static class newHandler implements HttpHandler{

             public void handle(HttpExchange t) throws IOException {

             byte[] res = "<h1> This is a response</h1>".getBytes();            
 	     t.sendResponseHeaders(200, res.length);             
	     OutputStream os = t.getResponseBody();             
	      os.write(res);             
	      os.close();
           }                                 
      }

        static class newHandler1 implements HttpHandler {

             public void handle(HttpExchange t) throws IOException {

             byte[] res = "<h1>191311066</h1>".getBytes();            
 	     t.sendResponseHeaders(200, res.length);            
 	     OutputStream os = t.getResponseBody();            
 	      os.write(res);            
 	      os.close();

             }                                  }

    
}





